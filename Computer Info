# ============================
# PowerShell Script - PC Full Info Report (With Disk BusType & MediaType)
# ============================

try {
    Enable-PSRemoting -Force -ErrorAction Stop *> $null
    Set-Service -Name WinRM -StartupType Automatic *> $null
    Start-Service -Name WinRM *> $null
    New-NetFirewallRule -DisplayName "WinRM Manual" -Direction Inbound -LocalPort 5985 -Protocol TCP -Action Allow -Profile Public *> $null
    # Write-Host "✅ تم تفعيل WinRM بنجاح.`n" -ForegroundColor Green
} catch {
     Write-Host "❌ حدث خطأ أثناء تفعيل WinRM: $_" -ForegroundColor Red
}

# Gather general system info
$ComputerName = $env:COMPUTERNAME
$UserName = $env:USERNAME
$OS = Get-CimInstance Win32_OperatingSystem | Select-Object -ExpandProperty Caption
$CPU = Get-CimInstance Win32_Processor | Select-Object -ExpandProperty Name
$RAM = "{0:N2} GB" -f ((Get-CimInstance Win32_ComputerSystem).TotalPhysicalMemory / 1GB)
$SerialNumber = (Get-CimInstance Win32_BIOS).SerialNumber

# Check installed applications
$InstalledApps = Get-ItemProperty HKLM:\Software\Wow6432Node\Microsoft\Windows\CurrentVersion\Uninstall\*,
                                  HKLM:\Software\Microsoft\Windows\CurrentVersion\Uninstall\* |
                  Select-Object DisplayName

function Check-App($name) {
    if ($InstalledApps.DisplayName -match $name) {
        return "Installed"
    } else {
        return "Not Installed"
    }
}

$VNC = Check-App "VNC Server"
$OutputMessenger = Check-App "Output Messenger"
$Bitdefender = Check-App "Bitdefender"

# Get all disks and networks
$Disks = Get-PhysicalDisk
$Networks = Get-CimInstance Win32_NetworkAdapterConfiguration | Where-Object { $_.IPEnabled -eq $true }

# Prepare output list
$Output = @()
$first = $true

foreach ($disk in $Disks) {
    $commonInfo = if ($first) {
        @{
            ComputerName     = $ComputerName
            Username         = $UserName
            OS               = $OS
            CPU              = $CPU
            RAM              = $RAM
            VNC_Server       = $VNC
            Output_Messenger = $OutputMessenger
            Bitdefender      = $Bitdefender
            SerialNumber      = $SerialNumber
        }
    } else {
        @{
            ComputerName     = "-"
            Username         = "-"
            OS               = "-"
            CPU              = "-"
            RAM              = "-"
            VNC_Server       = "-"
            Output_Messenger = "-"
            Bitdefender      = "-"
            SerialNumber     = "-"
        }
    }

    $first = $false

    $Output += [PSCustomObject]@{
        ComputerName       = $commonInfo.ComputerName
        Username           = $commonInfo.Username
        OS                 = $commonInfo.OS
        CPU                = $commonInfo.CPU
        RAM                = $commonInfo.RAM
        SerialNumber       = $commonInfo.SerialNumber
        NetworkName        = "-"
        MACAddress         = "-"
        IPAddress          = "-"
        DiskFriendlyName   = $disk.FriendlyName
        DiskBusType        = $disk.BusType
        DiskMediaType      = $disk.MediaType
        VNC_Server         = $commonInfo.VNC_Server
        Output_Messenger   = $commonInfo.Output_Messenger
        Bitdefender        = $commonInfo.Bitdefender
    }
}

foreach ($net in $Networks) {
    $Output += [PSCustomObject]@{
        NetworkName        = $net.Description
        MACAddress         = $net.MACAddress
        IPAddress          = $net.IPAddress[0]
    }
}

# Export to CSV
$CSVPath = "C:\PC_Full_Info.csv"
$Output | Export-Csv -Path $CSVPath -NoTypeInformation -Encoding UTF8 *> $null

 Write-Host "✅ Done
